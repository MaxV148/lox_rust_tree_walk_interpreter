Token { token_type: CLASS, lexeme: Some("class"), literal: None, line: 1, col: 0 }
Token { token_type: IDENTIFIER, lexeme: Some("Toggle"), literal: None, line: 1, col: 6 }
Token { token_type: RightBrace, lexeme: Some("{"), literal: None, line: 1, col: 13 }
Token { token_type: IDENTIFIER, lexeme: Some("init"), literal: None, line: 2, col: 3 }
Token { token_type: LeftParen, lexeme: Some("("), literal: None, line: 2, col: 7 }
Token { token_type: IDENTIFIER, lexeme: Some("startState"), literal: None, line: 2, col: 8 }
Token { token_type: RightParen, lexeme: Some(")"), literal: None, line: 2, col: 18 }
Token { token_type: RightBrace, lexeme: Some("{"), literal: None, line: 2, col: 20 }
Token { token_type: THIS, lexeme: Some("this"), literal: None, line: 3, col: 5 }
Token { token_type: DOT, lexeme: Some("."), literal: None, line: 3, col: 9 }
Token { token_type: IDENTIFIER, lexeme: Some("state"), literal: None, line: 3, col: 10 }
Token { token_type: EQUAL, lexeme: Some("="), literal: None, line: 3, col: 16 }
Token { token_type: IDENTIFIER, lexeme: Some("startState"), literal: None, line: 3, col: 18 }
Token { token_type: SEMICOLON, lexeme: Some(";"), literal: None, line: 3, col: 28 }
Token { token_type: LeftBrace, lexeme: Some("}"), literal: None, line: 4, col: 3 }
Token { token_type: IDENTIFIER, lexeme: Some("value"), literal: None, line: 6, col: 3 }
Token { token_type: LeftParen, lexeme: Some("("), literal: None, line: 6, col: 8 }
Token { token_type: RightParen, lexeme: Some(")"), literal: None, line: 6, col: 9 }
Token { token_type: RightBrace, lexeme: Some("{"), literal: None, line: 6, col: 11 }
Token { token_type: RETURN, lexeme: Some("return"), literal: None, line: 6, col: 13 }
Token { token_type: THIS, lexeme: Some("this"), literal: None, line: 6, col: 20 }
Token { token_type: DOT, lexeme: Some("."), literal: None, line: 6, col: 24 }
Token { token_type: IDENTIFIER, lexeme: Some("state"), literal: None, line: 6, col: 25 }
Token { token_type: SEMICOLON, lexeme: Some(";"), literal: None, line: 6, col: 30 }
Token { token_type: LeftBrace, lexeme: Some("}"), literal: None, line: 6, col: 32 }
Token { token_type: IDENTIFIER, lexeme: Some("activate"), literal: None, line: 8, col: 3 }
Token { token_type: LeftParen, lexeme: Some("("), literal: None, line: 8, col: 11 }
Token { token_type: RightParen, lexeme: Some(")"), literal: None, line: 8, col: 12 }
Token { token_type: RightBrace, lexeme: Some("{"), literal: None, line: 8, col: 14 }
Token { token_type: THIS, lexeme: Some("this"), literal: None, line: 9, col: 5 }
Token { token_type: DOT, lexeme: Some("."), literal: None, line: 9, col: 9 }
Token { token_type: IDENTIFIER, lexeme: Some("state"), literal: None, line: 9, col: 10 }
Token { token_type: EQUAL, lexeme: Some("="), literal: None, line: 9, col: 16 }
Token { token_type: BANG, lexeme: Some("="), literal: None, line: 9, col: 18 }
Token { token_type: THIS, lexeme: Some("this"), literal: None, line: 9, col: 19 }
Token { token_type: DOT, lexeme: Some("."), literal: None, line: 9, col: 23 }
Token { token_type: IDENTIFIER, lexeme: Some("state"), literal: None, line: 9, col: 24 }
Token { token_type: SEMICOLON, lexeme: Some(";"), literal: None, line: 9, col: 29 }
Token { token_type: RETURN, lexeme: Some("return"), literal: None, line: 10, col: 5 }
Token { token_type: THIS, lexeme: Some("this"), literal: None, line: 10, col: 12 }
Token { token_type: SEMICOLON, lexeme: Some(";"), literal: None, line: 10, col: 16 }
Token { token_type: LeftBrace, lexeme: Some("}"), literal: None, line: 11, col: 3 }
Token { token_type: LeftBrace, lexeme: Some("}"), literal: None, line: 12, col: 1 }
Token { token_type: CLASS, lexeme: Some("class"), literal: None, line: 14, col: 1 }
Token { token_type: IDENTIFIER, lexeme: Some("NthToggle"), literal: None, line: 14, col: 7 }
Token { token_type: LESS, lexeme: Some("<"), literal: None, line: 14, col: 17 }
Token { token_type: IDENTIFIER, lexeme: Some("Toggle"), literal: None, line: 14, col: 19 }
Token { token_type: RightBrace, lexeme: Some("{"), literal: None, line: 14, col: 26 }
Token { token_type: IDENTIFIER, lexeme: Some("init"), literal: None, line: 15, col: 3 }
Token { token_type: LeftParen, lexeme: Some("("), literal: None, line: 15, col: 7 }
Token { token_type: IDENTIFIER, lexeme: Some("startState"), literal: None, line: 15, col: 8 }
Token { token_type: COMMA, lexeme: Some(","), literal: None, line: 15, col: 18 }
Token { token_type: IDENTIFIER, lexeme: Some("maxCounter"), literal: None, line: 15, col: 20 }
Token { token_type: RightParen, lexeme: Some(")"), literal: None, line: 15, col: 30 }
Token { token_type: RightBrace, lexeme: Some("{"), literal: None, line: 15, col: 32 }
Token { token_type: SUPER, lexeme: Some("super"), literal: None, line: 16, col: 5 }
Token { token_type: DOT, lexeme: Some("."), literal: None, line: 16, col: 10 }
Token { token_type: IDENTIFIER, lexeme: Some("init"), literal: None, line: 16, col: 11 }
Token { token_type: LeftParen, lexeme: Some("("), literal: None, line: 16, col: 15 }
Token { token_type: IDENTIFIER, lexeme: Some("startState"), literal: None, line: 16, col: 16 }
Token { token_type: RightParen, lexeme: Some(")"), literal: None, line: 16, col: 26 }
Token { token_type: SEMICOLON, lexeme: Some(";"), literal: None, line: 16, col: 27 }
Token { token_type: THIS, lexeme: Some("this"), literal: None, line: 17, col: 5 }
Token { token_type: DOT, lexeme: Some("."), literal: None, line: 17, col: 9 }
Token { token_type: IDENTIFIER, lexeme: Some("countMax"), literal: None, line: 17, col: 10 }
Token { token_type: EQUAL, lexeme: Some("="), literal: None, line: 17, col: 19 }
Token { token_type: IDENTIFIER, lexeme: Some("maxCounter"), literal: None, line: 17, col: 21 }
Token { token_type: SEMICOLON, lexeme: Some(";"), literal: None, line: 17, col: 31 }
Token { token_type: THIS, lexeme: Some("this"), literal: None, line: 18, col: 5 }
Token { token_type: DOT, lexeme: Some("."), literal: None, line: 18, col: 9 }
Token { token_type: IDENTIFIER, lexeme: Some("count"), literal: None, line: 18, col: 10 }
Token { token_type: EQUAL, lexeme: Some("="), literal: None, line: 18, col: 16 }
Token { token_type: NUMBER, lexeme: None, literal: Some(Literal { string: None, number: Some(0.0) }), line: 18, col: 19 }
Token { token_type: SEMICOLON, lexeme: Some(";"), literal: None, line: 18, col: 19 }
Token { token_type: LeftBrace, lexeme: Some("}"), literal: None, line: 19, col: 3 }
Token { token_type: IDENTIFIER, lexeme: Some("activate"), literal: None, line: 21, col: 3 }
Token { token_type: LeftParen, lexeme: Some("("), literal: None, line: 21, col: 11 }
Token { token_type: RightParen, lexeme: Some(")"), literal: None, line: 21, col: 12 }
Token { token_type: RightBrace, lexeme: Some("{"), literal: None, line: 21, col: 14 }
Token { token_type: THIS, lexeme: Some("this"), literal: None, line: 22, col: 5 }
Token { token_type: DOT, lexeme: Some("."), literal: None, line: 22, col: 9 }
Token { token_type: IDENTIFIER, lexeme: Some("count"), literal: None, line: 22, col: 10 }
Token { token_type: EQUAL, lexeme: Some("="), literal: None, line: 22, col: 16 }
Token { token_type: THIS, lexeme: Some("this"), literal: None, line: 22, col: 18 }
Token { token_type: DOT, lexeme: Some("."), literal: None, line: 22, col: 22 }
Token { token_type: IDENTIFIER, lexeme: Some("count"), literal: None, line: 22, col: 23 }
Token { token_type: PLUS, lexeme: Some("+"), literal: None, line: 22, col: 29 }
Token { token_type: NUMBER, lexeme: None, literal: Some(Literal { string: None, number: Some(1.0) }), line: 22, col: 32 }
Token { token_type: SEMICOLON, lexeme: Some(";"), literal: None, line: 22, col: 32 }
Token { token_type: IF, lexeme: Some("if"), literal: None, line: 23, col: 5 }
Token { token_type: LeftParen, lexeme: Some("("), literal: None, line: 23, col: 8 }
Token { token_type: THIS, lexeme: Some("this"), literal: None, line: 23, col: 9 }
Token { token_type: DOT, lexeme: Some("."), literal: None, line: 23, col: 13 }
Token { token_type: IDENTIFIER, lexeme: Some("count"), literal: None, line: 23, col: 14 }
Token { token_type: GREATER_EQUAL, lexeme: Some(">="), literal: None, line: 23, col: 19 }
Token { token_type: EQUAL, lexeme: Some("="), literal: None, line: 23, col: 21 }
Token { token_type: THIS, lexeme: Some("this"), literal: None, line: 23, col: 23 }
Token { token_type: DOT, lexeme: Some("."), literal: None, line: 23, col: 27 }
Token { token_type: IDENTIFIER, lexeme: Some("countMax"), literal: None, line: 23, col: 28 }
Token { token_type: RightParen, lexeme: Some(")"), literal: None, line: 23, col: 36 }
Token { token_type: RightBrace, lexeme: Some("{"), literal: None, line: 23, col: 38 }
Token { token_type: SUPER, lexeme: Some("super"), literal: None, line: 24, col: 7 }
Token { token_type: DOT, lexeme: Some("."), literal: None, line: 24, col: 12 }
Token { token_type: IDENTIFIER, lexeme: Some("activate"), literal: None, line: 24, col: 13 }
Token { token_type: LeftParen, lexeme: Some("("), literal: None, line: 24, col: 21 }
Token { token_type: RightParen, lexeme: Some(")"), literal: None, line: 24, col: 22 }
Token { token_type: SEMICOLON, lexeme: Some(";"), literal: None, line: 24, col: 23 }
Token { token_type: THIS, lexeme: Some("this"), literal: None, line: 25, col: 7 }
Token { token_type: DOT, lexeme: Some("."), literal: None, line: 25, col: 11 }
Token { token_type: IDENTIFIER, lexeme: Some("count"), literal: None, line: 25, col: 12 }
Token { token_type: EQUAL, lexeme: Some("="), literal: None, line: 25, col: 18 }
Token { token_type: NUMBER, lexeme: None, literal: Some(Literal { string: None, number: Some(0.0) }), line: 25, col: 21 }
Token { token_type: SEMICOLON, lexeme: Some(";"), literal: None, line: 25, col: 21 }
Token { token_type: LeftBrace, lexeme: Some("}"), literal: None, line: 26, col: 5 }
Token { token_type: RETURN, lexeme: Some("return"), literal: None, line: 28, col: 5 }
Token { token_type: THIS, lexeme: Some("this"), literal: None, line: 28, col: 12 }
Token { token_type: SEMICOLON, lexeme: Some(";"), literal: None, line: 28, col: 16 }
Token { token_type: LeftBrace, lexeme: Some("}"), literal: None, line: 29, col: 3 }
Token { token_type: LeftBrace, lexeme: Some("}"), literal: None, line: 30, col: 1 }
Token { token_type: VAR, lexeme: Some("var"), literal: None, line: 32, col: 1 }
Token { token_type: IDENTIFIER, lexeme: Some("start"), literal: None, line: 32, col: 5 }
Token { token_type: EQUAL, lexeme: Some("="), literal: None, line: 32, col: 11 }
Token { token_type: IDENTIFIER, lexeme: Some("clock"), literal: None, line: 32, col: 13 }
Token { token_type: LeftParen, lexeme: Some("("), literal: None, line: 32, col: 18 }
Token { token_type: RightParen, lexeme: Some(")"), literal: None, line: 32, col: 19 }
Token { token_type: SEMICOLON, lexeme: Some(";"), literal: None, line: 32, col: 20 }
Token { token_type: VAR, lexeme: Some("var"), literal: None, line: 33, col: 1 }
Token { token_type: IDENTIFIER, lexeme: Some("n"), literal: None, line: 33, col: 5 }
Token { token_type: EQUAL, lexeme: Some("="), literal: None, line: 33, col: 7 }
Token { token_type: NUMBER, lexeme: None, literal: Some(Literal { string: None, number: Some(100000.0) }), line: 33, col: 15 }
Token { token_type: SEMICOLON, lexeme: Some(";"), literal: None, line: 33, col: 15 }
Token { token_type: VAR, lexeme: Some("var"), literal: None, line: 34, col: 1 }
Token { token_type: IDENTIFIER, lexeme: Some("val"), literal: None, line: 34, col: 5 }
Token { token_type: EQUAL, lexeme: Some("="), literal: None, line: 34, col: 9 }
Token { token_type: TRUE, lexeme: Some("true"), literal: None, line: 34, col: 11 }
Token { token_type: SEMICOLON, lexeme: Some(";"), literal: None, line: 34, col: 15 }
Token { token_type: VAR, lexeme: Some("var"), literal: None, line: 35, col: 1 }
Token { token_type: IDENTIFIER, lexeme: Some("toggle"), literal: None, line: 35, col: 5 }
Token { token_type: EQUAL, lexeme: Some("="), literal: None, line: 35, col: 12 }
Token { token_type: IDENTIFIER, lexeme: Some("Toggle"), literal: None, line: 35, col: 14 }
Token { token_type: LeftParen, lexeme: Some("("), literal: None, line: 35, col: 20 }
Token { token_type: IDENTIFIER, lexeme: Some("val"), literal: None, line: 35, col: 21 }
Token { token_type: RightParen, lexeme: Some(")"), literal: None, line: 35, col: 24 }
Token { token_type: SEMICOLON, lexeme: Some(";"), literal: None, line: 35, col: 25 }
Token { token_type: FOR, lexeme: Some("for"), literal: None, line: 37, col: 1 }
Token { token_type: LeftParen, lexeme: Some("("), literal: None, line: 37, col: 5 }
Token { token_type: VAR, lexeme: Some("var"), literal: None, line: 37, col: 6 }
Token { token_type: IDENTIFIER, lexeme: Some("i"), literal: None, line: 37, col: 10 }
Token { token_type: EQUAL, lexeme: Some("="), literal: None, line: 37, col: 12 }
Token { token_type: NUMBER, lexeme: None, literal: Some(Literal { string: None, number: Some(0.0) }), line: 37, col: 15 }
Token { token_type: SEMICOLON, lexeme: Some(";"), literal: None, line: 37, col: 15 }
Token { token_type: IDENTIFIER, lexeme: Some("i"), literal: None, line: 37, col: 17 }
Token { token_type: LESS, lexeme: Some("<"), literal: None, line: 37, col: 19 }
Token { token_type: IDENTIFIER, lexeme: Some("n"), literal: None, line: 37, col: 21 }
Token { token_type: SEMICOLON, lexeme: Some(";"), literal: None, line: 37, col: 22 }
Token { token_type: IDENTIFIER, lexeme: Some("i"), literal: None, line: 37, col: 24 }
Token { token_type: EQUAL, lexeme: Some("="), literal: None, line: 37, col: 26 }
Token { token_type: IDENTIFIER, lexeme: Some("i"), literal: None, line: 37, col: 28 }
Token { token_type: PLUS, lexeme: Some("+"), literal: None, line: 37, col: 30 }
Token { token_type: NUMBER, lexeme: None, literal: Some(Literal { string: None, number: Some(1.0) }), line: 37, col: 33 }
Token { token_type: RightParen, lexeme: Some(")"), literal: None, line: 37, col: 33 }
Token { token_type: RightBrace, lexeme: Some("{"), literal: None, line: 37, col: 35 }
Token { token_type: IDENTIFIER, lexeme: Some("val"), literal: None, line: 38, col: 3 }
Token { token_type: EQUAL, lexeme: Some("="), literal: None, line: 38, col: 7 }
Token { token_type: IDENTIFIER, lexeme: Some("toggle"), literal: None, line: 38, col: 9 }
Token { token_type: DOT, lexeme: Some("."), literal: None, line: 38, col: 15 }
Token { token_type: IDENTIFIER, lexeme: Some("activate"), literal: None, line: 38, col: 16 }
Token { token_type: LeftParen, lexeme: Some("("), literal: None, line: 38, col: 24 }
Token { token_type: RightParen, lexeme: Some(")"), literal: None, line: 38, col: 25 }
Token { token_type: DOT, lexeme: Some("."), literal: None, line: 38, col: 26 }
Token { token_type: IDENTIFIER, lexeme: Some("value"), literal: None, line: 38, col: 27 }
Token { token_type: LeftParen, lexeme: Some("("), literal: None, line: 38, col: 32 }
Token { token_type: RightParen, lexeme: Some(")"), literal: None, line: 38, col: 33 }
Token { token_type: SEMICOLON, lexeme: Some(";"), literal: None, line: 38, col: 34 }
Token { token_type: IDENTIFIER, lexeme: Some("val"), literal: None, line: 39, col: 3 }
Token { token_type: EQUAL, lexeme: Some("="), literal: None, line: 39, col: 7 }
Token { token_type: IDENTIFIER, lexeme: Some("toggle"), literal: None, line: 39, col: 9 }
Token { token_type: DOT, lexeme: Some("."), literal: None, line: 39, col: 15 }
Token { token_type: IDENTIFIER, lexeme: Some("activate"), literal: None, line: 39, col: 16 }
Token { token_type: LeftParen, lexeme: Some("("), literal: None, line: 39, col: 24 }
Token { token_type: RightParen, lexeme: Some(")"), literal: None, line: 39, col: 25 }
Token { token_type: DOT, lexeme: Some("."), literal: None, line: 39, col: 26 }
Token { token_type: IDENTIFIER, lexeme: Some("value"), literal: None, line: 39, col: 27 }
Token { token_type: LeftParen, lexeme: Some("("), literal: None, line: 39, col: 32 }
Token { token_type: RightParen, lexeme: Some(")"), literal: None, line: 39, col: 33 }
Token { token_type: SEMICOLON, lexeme: Some(";"), literal: None, line: 39, col: 34 }
Token { token_type: IDENTIFIER, lexeme: Some("val"), literal: None, line: 40, col: 3 }
Token { token_type: EQUAL, lexeme: Some("="), literal: None, line: 40, col: 7 }
Token { token_type: IDENTIFIER, lexeme: Some("toggle"), literal: None, line: 40, col: 9 }
Token { token_type: DOT, lexeme: Some("."), literal: None, line: 40, col: 15 }
Token { token_type: IDENTIFIER, lexeme: Some("activate"), literal: None, line: 40, col: 16 }
Token { token_type: LeftParen, lexeme: Some("("), literal: None, line: 40, col: 24 }
Token { token_type: RightParen, lexeme: Some(")"), literal: None, line: 40, col: 25 }
Token { token_type: DOT, lexeme: Some("."), literal: None, line: 40, col: 26 }
Token { token_type: IDENTIFIER, lexeme: Some("value"), literal: None, line: 40, col: 27 }
Token { token_type: LeftParen, lexeme: Some("("), literal: None, line: 40, col: 32 }
Token { token_type: RightParen, lexeme: Some(")"), literal: None, line: 40, col: 33 }
Token { token_type: SEMICOLON, lexeme: Some(";"), literal: None, line: 40, col: 34 }
Token { token_type: IDENTIFIER, lexeme: Some("val"), literal: None, line: 41, col: 3 }
Token { token_type: EQUAL, lexeme: Some("="), literal: None, line: 41, col: 7 }
Token { token_type: IDENTIFIER, lexeme: Some("toggle"), literal: None, line: 41, col: 9 }
Token { token_type: DOT, lexeme: Some("."), literal: None, line: 41, col: 15 }
Token { token_type: IDENTIFIER, lexeme: Some("activate"), literal: None, line: 41, col: 16 }
Token { token_type: LeftParen, lexeme: Some("("), literal: None, line: 41, col: 24 }
Token { token_type: RightParen, lexeme: Some(")"), literal: None, line: 41, col: 25 }
Token { token_type: DOT, lexeme: Some("."), literal: None, line: 41, col: 26 }
Token { token_type: IDENTIFIER, lexeme: Some("value"), literal: None, line: 41, col: 27 }
Token { token_type: LeftParen, lexeme: Some("("), literal: None, line: 41, col: 32 }
Token { token_type: RightParen, lexeme: Some(")"), literal: None, line: 41, col: 33 }
Token { token_type: SEMICOLON, lexeme: Some(";"), literal: None, line: 41, col: 34 }
Token { token_type: IDENTIFIER, lexeme: Some("val"), literal: None, line: 42, col: 3 }
Token { token_type: EQUAL, lexeme: Some("="), literal: None, line: 42, col: 7 }
Token { token_type: IDENTIFIER, lexeme: Some("toggle"), literal: None, line: 42, col: 9 }
Token { token_type: DOT, lexeme: Some("."), literal: None, line: 42, col: 15 }
Token { token_type: IDENTIFIER, lexeme: Some("activate"), literal: None, line: 42, col: 16 }
Token { token_type: LeftParen, lexeme: Some("("), literal: None, line: 42, col: 24 }
Token { token_type: RightParen, lexeme: Some(")"), literal: None, line: 42, col: 25 }
Token { token_type: DOT, lexeme: Some("."), literal: None, line: 42, col: 26 }
Token { token_type: IDENTIFIER, lexeme: Some("value"), literal: None, line: 42, col: 27 }
Token { token_type: LeftParen, lexeme: Some("("), literal: None, line: 42, col: 32 }
Token { token_type: RightParen, lexeme: Some(")"), literal: None, line: 42, col: 33 }
Token { token_type: SEMICOLON, lexeme: Some(";"), literal: None, line: 42, col: 34 }
Token { token_type: IDENTIFIER, lexeme: Some("val"), literal: None, line: 43, col: 3 }
Token { token_type: EQUAL, lexeme: Some("="), literal: None, line: 43, col: 7 }
Token { token_type: IDENTIFIER, lexeme: Some("toggle"), literal: None, line: 43, col: 9 }
Token { token_type: DOT, lexeme: Some("."), literal: None, line: 43, col: 15 }
Token { token_type: IDENTIFIER, lexeme: Some("activate"), literal: None, line: 43, col: 16 }
Token { token_type: LeftParen, lexeme: Some("("), literal: None, line: 43, col: 24 }
Token { token_type: RightParen, lexeme: Some(")"), literal: None, line: 43, col: 25 }
Token { token_type: DOT, lexeme: Some("."), literal: None, line: 43, col: 26 }
Token { token_type: IDENTIFIER, lexeme: Some("value"), literal: None, line: 43, col: 27 }
Token { token_type: LeftParen, lexeme: Some("("), literal: None, line: 43, col: 32 }
Token { token_type: RightParen, lexeme: Some(")"), literal: None, line: 43, col: 33 }
Token { token_type: SEMICOLON, lexeme: Some(";"), literal: None, line: 43, col: 34 }
Token { token_type: IDENTIFIER, lexeme: Some("val"), literal: None, line: 44, col: 3 }
Token { token_type: EQUAL, lexeme: Some("="), literal: None, line: 44, col: 7 }
Token { token_type: IDENTIFIER, lexeme: Some("toggle"), literal: None, line: 44, col: 9 }
Token { token_type: DOT, lexeme: Some("."), literal: None, line: 44, col: 15 }
Token { token_type: IDENTIFIER, lexeme: Some("activate"), literal: None, line: 44, col: 16 }
Token { token_type: LeftParen, lexeme: Some("("), literal: None, line: 44, col: 24 }
Token { token_type: RightParen, lexeme: Some(")"), literal: None, line: 44, col: 25 }
Token { token_type: DOT, lexeme: Some("."), literal: None, line: 44, col: 26 }
Token { token_type: IDENTIFIER, lexeme: Some("value"), literal: None, line: 44, col: 27 }
Token { token_type: LeftParen, lexeme: Some("("), literal: None, line: 44, col: 32 }
Token { token_type: RightParen, lexeme: Some(")"), literal: None, line: 44, col: 33 }
Token { token_type: SEMICOLON, lexeme: Some(";"), literal: None, line: 44, col: 34 }
Token { token_type: IDENTIFIER, lexeme: Some("val"), literal: None, line: 45, col: 3 }
Token { token_type: EQUAL, lexeme: Some("="), literal: None, line: 45, col: 7 }
Token { token_type: IDENTIFIER, lexeme: Some("toggle"), literal: None, line: 45, col: 9 }
Token { token_type: DOT, lexeme: Some("."), literal: None, line: 45, col: 15 }
Token { token_type: IDENTIFIER, lexeme: Some("activate"), literal: None, line: 45, col: 16 }
Token { token_type: LeftParen, lexeme: Some("("), literal: None, line: 45, col: 24 }
Token { token_type: RightParen, lexeme: Some(")"), literal: None, line: 45, col: 25 }
Token { token_type: DOT, lexeme: Some("."), literal: None, line: 45, col: 26 }
Token { token_type: IDENTIFIER, lexeme: Some("value"), literal: None, line: 45, col: 27 }
Token { token_type: LeftParen, lexeme: Some("("), literal: None, line: 45, col: 32 }
Token { token_type: RightParen, lexeme: Some(")"), literal: None, line: 45, col: 33 }
Token { token_type: SEMICOLON, lexeme: Some(";"), literal: None, line: 45, col: 34 }
Token { token_type: IDENTIFIER, lexeme: Some("val"), literal: None, line: 46, col: 3 }
Token { token_type: EQUAL, lexeme: Some("="), literal: None, line: 46, col: 7 }
Token { token_type: IDENTIFIER, lexeme: Some("toggle"), literal: None, line: 46, col: 9 }
Token { token_type: DOT, lexeme: Some("."), literal: None, line: 46, col: 15 }
Token { token_type: IDENTIFIER, lexeme: Some("activate"), literal: None, line: 46, col: 16 }
Token { token_type: LeftParen, lexeme: Some("("), literal: None, line: 46, col: 24 }
Token { token_type: RightParen, lexeme: Some(")"), literal: None, line: 46, col: 25 }
Token { token_type: DOT, lexeme: Some("."), literal: None, line: 46, col: 26 }
Token { token_type: IDENTIFIER, lexeme: Some("value"), literal: None, line: 46, col: 27 }
Token { token_type: LeftParen, lexeme: Some("("), literal: None, line: 46, col: 32 }
Token { token_type: RightParen, lexeme: Some(")"), literal: None, line: 46, col: 33 }
Token { token_type: SEMICOLON, lexeme: Some(";"), literal: None, line: 46, col: 34 }
Token { token_type: IDENTIFIER, lexeme: Some("val"), literal: None, line: 47, col: 3 }
Token { token_type: EQUAL, lexeme: Some("="), literal: None, line: 47, col: 7 }
Token { token_type: IDENTIFIER, lexeme: Some("toggle"), literal: None, line: 47, col: 9 }
Token { token_type: DOT, lexeme: Some("."), literal: None, line: 47, col: 15 }
Token { token_type: IDENTIFIER, lexeme: Some("activate"), literal: None, line: 47, col: 16 }
Token { token_type: LeftParen, lexeme: Some("("), literal: None, line: 47, col: 24 }
Token { token_type: RightParen, lexeme: Some(")"), literal: None, line: 47, col: 25 }
Token { token_type: DOT, lexeme: Some("."), literal: None, line: 47, col: 26 }
Token { token_type: IDENTIFIER, lexeme: Some("value"), literal: None, line: 47, col: 27 }
Token { token_type: LeftParen, lexeme: Some("("), literal: None, line: 47, col: 32 }
Token { token_type: RightParen, lexeme: Some(")"), literal: None, line: 47, col: 33 }
Token { token_type: SEMICOLON, lexeme: Some(";"), literal: None, line: 47, col: 34 }
Token { token_type: LeftBrace, lexeme: Some("}"), literal: None, line: 48, col: 1 }
Token { token_type: PRINT, lexeme: Some("print"), literal: None, line: 50, col: 1 }
Token { token_type: IDENTIFIER, lexeme: Some("toggle"), literal: None, line: 50, col: 7 }
Token { token_type: DOT, lexeme: Some("."), literal: None, line: 50, col: 13 }
Token { token_type: IDENTIFIER, lexeme: Some("value"), literal: None, line: 50, col: 14 }
Token { token_type: LeftParen, lexeme: Some("("), literal: None, line: 50, col: 19 }
Token { token_type: RightParen, lexeme: Some(")"), literal: None, line: 50, col: 20 }
Token { token_type: SEMICOLON, lexeme: Some(";"), literal: None, line: 50, col: 21 }
Token { token_type: IDENTIFIER, lexeme: Some("val"), literal: None, line: 52, col: 1 }
Token { token_type: EQUAL, lexeme: Some("="), literal: None, line: 52, col: 5 }
Token { token_type: TRUE, lexeme: Some("true"), literal: None, line: 52, col: 7 }
Token { token_type: SEMICOLON, lexeme: Some(";"), literal: None, line: 52, col: 11 }
Token { token_type: VAR, lexeme: Some("var"), literal: None, line: 53, col: 1 }
Token { token_type: IDENTIFIER, lexeme: Some("ntoggle"), literal: None, line: 53, col: 5 }
Token { token_type: EQUAL, lexeme: Some("="), literal: None, line: 53, col: 13 }
Token { token_type: IDENTIFIER, lexeme: Some("NthToggle"), literal: None, line: 53, col: 15 }
Token { token_type: LeftParen, lexeme: Some("("), literal: None, line: 53, col: 24 }
Token { token_type: IDENTIFIER, lexeme: Some("val"), literal: None, line: 53, col: 25 }
Token { token_type: COMMA, lexeme: Some(","), literal: None, line: 53, col: 28 }
Token { token_type: NUMBER, lexeme: None, literal: Some(Literal { string: None, number: Some(3.0) }), line: 53, col: 31 }
Token { token_type: RightParen, lexeme: Some(")"), literal: None, line: 53, col: 31 }
Token { token_type: SEMICOLON, lexeme: Some(";"), literal: None, line: 53, col: 32 }
Token { token_type: FOR, lexeme: Some("for"), literal: None, line: 55, col: 1 }
Token { token_type: LeftParen, lexeme: Some("("), literal: None, line: 55, col: 5 }
Token { token_type: VAR, lexeme: Some("var"), literal: None, line: 55, col: 6 }
Token { token_type: IDENTIFIER, lexeme: Some("i"), literal: None, line: 55, col: 10 }
Token { token_type: EQUAL, lexeme: Some("="), literal: None, line: 55, col: 12 }
Token { token_type: NUMBER, lexeme: None, literal: Some(Literal { string: None, number: Some(0.0) }), line: 55, col: 15 }
Token { token_type: SEMICOLON, lexeme: Some(";"), literal: None, line: 55, col: 15 }
Token { token_type: IDENTIFIER, lexeme: Some("i"), literal: None, line: 55, col: 17 }
Token { token_type: LESS, lexeme: Some("<"), literal: None, line: 55, col: 19 }
Token { token_type: IDENTIFIER, lexeme: Some("n"), literal: None, line: 55, col: 21 }
Token { token_type: SEMICOLON, lexeme: Some(";"), literal: None, line: 55, col: 22 }
Token { token_type: IDENTIFIER, lexeme: Some("i"), literal: None, line: 55, col: 24 }
Token { token_type: EQUAL, lexeme: Some("="), literal: None, line: 55, col: 26 }
Token { token_type: IDENTIFIER, lexeme: Some("i"), literal: None, line: 55, col: 28 }
Token { token_type: PLUS, lexeme: Some("+"), literal: None, line: 55, col: 30 }
Token { token_type: NUMBER, lexeme: None, literal: Some(Literal { string: None, number: Some(1.0) }), line: 55, col: 33 }
Token { token_type: RightParen, lexeme: Some(")"), literal: None, line: 55, col: 33 }
Token { token_type: RightBrace, lexeme: Some("{"), literal: None, line: 55, col: 35 }
Token { token_type: IDENTIFIER, lexeme: Some("val"), literal: None, line: 56, col: 3 }
Token { token_type: EQUAL, lexeme: Some("="), literal: None, line: 56, col: 7 }
Token { token_type: IDENTIFIER, lexeme: Some("ntoggle"), literal: None, line: 56, col: 9 }
Token { token_type: DOT, lexeme: Some("."), literal: None, line: 56, col: 16 }
Token { token_type: IDENTIFIER, lexeme: Some("activate"), literal: None, line: 56, col: 17 }
Token { token_type: LeftParen, lexeme: Some("("), literal: None, line: 56, col: 25 }
Token { token_type: RightParen, lexeme: Some(")"), literal: None, line: 56, col: 26 }
Token { token_type: DOT, lexeme: Some("."), literal: None, line: 56, col: 27 }
Token { token_type: IDENTIFIER, lexeme: Some("value"), literal: None, line: 56, col: 28 }
Token { token_type: LeftParen, lexeme: Some("("), literal: None, line: 56, col: 33 }
Token { token_type: RightParen, lexeme: Some(")"), literal: None, line: 56, col: 34 }
Token { token_type: SEMICOLON, lexeme: Some(";"), literal: None, line: 56, col: 35 }
Token { token_type: IDENTIFIER, lexeme: Some("val"), literal: None, line: 57, col: 3 }
Token { token_type: EQUAL, lexeme: Some("="), literal: None, line: 57, col: 7 }
Token { token_type: IDENTIFIER, lexeme: Some("ntoggle"), literal: None, line: 57, col: 9 }
Token { token_type: DOT, lexeme: Some("."), literal: None, line: 57, col: 16 }
Token { token_type: IDENTIFIER, lexeme: Some("activate"), literal: None, line: 57, col: 17 }
Token { token_type: LeftParen, lexeme: Some("("), literal: None, line: 57, col: 25 }
Token { token_type: RightParen, lexeme: Some(")"), literal: None, line: 57, col: 26 }
Token { token_type: DOT, lexeme: Some("."), literal: None, line: 57, col: 27 }
Token { token_type: IDENTIFIER, lexeme: Some("value"), literal: None, line: 57, col: 28 }
Token { token_type: LeftParen, lexeme: Some("("), literal: None, line: 57, col: 33 }
Token { token_type: RightParen, lexeme: Some(")"), literal: None, line: 57, col: 34 }
Token { token_type: SEMICOLON, lexeme: Some(";"), literal: None, line: 57, col: 35 }
Token { token_type: IDENTIFIER, lexeme: Some("val"), literal: None, line: 58, col: 3 }
Token { token_type: EQUAL, lexeme: Some("="), literal: None, line: 58, col: 7 }
Token { token_type: IDENTIFIER, lexeme: Some("ntoggle"), literal: None, line: 58, col: 9 }
Token { token_type: DOT, lexeme: Some("."), literal: None, line: 58, col: 16 }
Token { token_type: IDENTIFIER, lexeme: Some("activate"), literal: None, line: 58, col: 17 }
Token { token_type: LeftParen, lexeme: Some("("), literal: None, line: 58, col: 25 }
Token { token_type: RightParen, lexeme: Some(")"), literal: None, line: 58, col: 26 }
Token { token_type: DOT, lexeme: Some("."), literal: None, line: 58, col: 27 }
Token { token_type: IDENTIFIER, lexeme: Some("value"), literal: None, line: 58, col: 28 }
Token { token_type: LeftParen, lexeme: Some("("), literal: None, line: 58, col: 33 }
Token { token_type: RightParen, lexeme: Some(")"), literal: None, line: 58, col: 34 }
Token { token_type: SEMICOLON, lexeme: Some(";"), literal: None, line: 58, col: 35 }
Token { token_type: IDENTIFIER, lexeme: Some("val"), literal: None, line: 59, col: 3 }
Token { token_type: EQUAL, lexeme: Some("="), literal: None, line: 59, col: 7 }
Token { token_type: IDENTIFIER, lexeme: Some("ntoggle"), literal: None, line: 59, col: 9 }
Token { token_type: DOT, lexeme: Some("."), literal: None, line: 59, col: 16 }
Token { token_type: IDENTIFIER, lexeme: Some("activate"), literal: None, line: 59, col: 17 }
Token { token_type: LeftParen, lexeme: Some("("), literal: None, line: 59, col: 25 }
Token { token_type: RightParen, lexeme: Some(")"), literal: None, line: 59, col: 26 }
Token { token_type: DOT, lexeme: Some("."), literal: None, line: 59, col: 27 }
Token { token_type: IDENTIFIER, lexeme: Some("value"), literal: None, line: 59, col: 28 }
Token { token_type: LeftParen, lexeme: Some("("), literal: None, line: 59, col: 33 }
Token { token_type: RightParen, lexeme: Some(")"), literal: None, line: 59, col: 34 }
Token { token_type: SEMICOLON, lexeme: Some(";"), literal: None, line: 59, col: 35 }
Token { token_type: IDENTIFIER, lexeme: Some("val"), literal: None, line: 60, col: 3 }
Token { token_type: EQUAL, lexeme: Some("="), literal: None, line: 60, col: 7 }
Token { token_type: IDENTIFIER, lexeme: Some("ntoggle"), literal: None, line: 60, col: 9 }
Token { token_type: DOT, lexeme: Some("."), literal: None, line: 60, col: 16 }
Token { token_type: IDENTIFIER, lexeme: Some("activate"), literal: None, line: 60, col: 17 }
Token { token_type: LeftParen, lexeme: Some("("), literal: None, line: 60, col: 25 }
Token { token_type: RightParen, lexeme: Some(")"), literal: None, line: 60, col: 26 }
Token { token_type: DOT, lexeme: Some("."), literal: None, line: 60, col: 27 }
Token { token_type: IDENTIFIER, lexeme: Some("value"), literal: None, line: 60, col: 28 }
Token { token_type: LeftParen, lexeme: Some("("), literal: None, line: 60, col: 33 }
Token { token_type: RightParen, lexeme: Some(")"), literal: None, line: 60, col: 34 }
Token { token_type: SEMICOLON, lexeme: Some(";"), literal: None, line: 60, col: 35 }
Token { token_type: IDENTIFIER, lexeme: Some("val"), literal: None, line: 61, col: 3 }
Token { token_type: EQUAL, lexeme: Some("="), literal: None, line: 61, col: 7 }
Token { token_type: IDENTIFIER, lexeme: Some("ntoggle"), literal: None, line: 61, col: 9 }
Token { token_type: DOT, lexeme: Some("."), literal: None, line: 61, col: 16 }
Token { token_type: IDENTIFIER, lexeme: Some("activate"), literal: None, line: 61, col: 17 }
Token { token_type: LeftParen, lexeme: Some("("), literal: None, line: 61, col: 25 }
Token { token_type: RightParen, lexeme: Some(")"), literal: None, line: 61, col: 26 }
Token { token_type: DOT, lexeme: Some("."), literal: None, line: 61, col: 27 }
Token { token_type: IDENTIFIER, lexeme: Some("value"), literal: None, line: 61, col: 28 }
Token { token_type: LeftParen, lexeme: Some("("), literal: None, line: 61, col: 33 }
Token { token_type: RightParen, lexeme: Some(")"), literal: None, line: 61, col: 34 }
Token { token_type: SEMICOLON, lexeme: Some(";"), literal: None, line: 61, col: 35 }
Token { token_type: IDENTIFIER, lexeme: Some("val"), literal: None, line: 62, col: 3 }
Token { token_type: EQUAL, lexeme: Some("="), literal: None, line: 62, col: 7 }
Token { token_type: IDENTIFIER, lexeme: Some("ntoggle"), literal: None, line: 62, col: 9 }
Token { token_type: DOT, lexeme: Some("."), literal: None, line: 62, col: 16 }
Token { token_type: IDENTIFIER, lexeme: Some("activate"), literal: None, line: 62, col: 17 }
Token { token_type: LeftParen, lexeme: Some("("), literal: None, line: 62, col: 25 }
Token { token_type: RightParen, lexeme: Some(")"), literal: None, line: 62, col: 26 }
Token { token_type: DOT, lexeme: Some("."), literal: None, line: 62, col: 27 }
Token { token_type: IDENTIFIER, lexeme: Some("value"), literal: None, line: 62, col: 28 }
Token { token_type: LeftParen, lexeme: Some("("), literal: None, line: 62, col: 33 }
Token { token_type: RightParen, lexeme: Some(")"), literal: None, line: 62, col: 34 }
Token { token_type: SEMICOLON, lexeme: Some(";"), literal: None, line: 62, col: 35 }
Token { token_type: IDENTIFIER, lexeme: Some("val"), literal: None, line: 63, col: 3 }
Token { token_type: EQUAL, lexeme: Some("="), literal: None, line: 63, col: 7 }
Token { token_type: IDENTIFIER, lexeme: Some("ntoggle"), literal: None, line: 63, col: 9 }
Token { token_type: DOT, lexeme: Some("."), literal: None, line: 63, col: 16 }
Token { token_type: IDENTIFIER, lexeme: Some("activate"), literal: None, line: 63, col: 17 }
Token { token_type: LeftParen, lexeme: Some("("), literal: None, line: 63, col: 25 }
Token { token_type: RightParen, lexeme: Some(")"), literal: None, line: 63, col: 26 }
Token { token_type: DOT, lexeme: Some("."), literal: None, line: 63, col: 27 }
Token { token_type: IDENTIFIER, lexeme: Some("value"), literal: None, line: 63, col: 28 }
Token { token_type: LeftParen, lexeme: Some("("), literal: None, line: 63, col: 33 }
Token { token_type: RightParen, lexeme: Some(")"), literal: None, line: 63, col: 34 }
Token { token_type: SEMICOLON, lexeme: Some(";"), literal: None, line: 63, col: 35 }
Token { token_type: IDENTIFIER, lexeme: Some("val"), literal: None, line: 64, col: 3 }
Token { token_type: EQUAL, lexeme: Some("="), literal: None, line: 64, col: 7 }
Token { token_type: IDENTIFIER, lexeme: Some("ntoggle"), literal: None, line: 64, col: 9 }
Token { token_type: DOT, lexeme: Some("."), literal: None, line: 64, col: 16 }
Token { token_type: IDENTIFIER, lexeme: Some("activate"), literal: None, line: 64, col: 17 }
Token { token_type: LeftParen, lexeme: Some("("), literal: None, line: 64, col: 25 }
Token { token_type: RightParen, lexeme: Some(")"), literal: None, line: 64, col: 26 }
Token { token_type: DOT, lexeme: Some("."), literal: None, line: 64, col: 27 }
Token { token_type: IDENTIFIER, lexeme: Some("value"), literal: None, line: 64, col: 28 }
Token { token_type: LeftParen, lexeme: Some("("), literal: None, line: 64, col: 33 }
Token { token_type: RightParen, lexeme: Some(")"), literal: None, line: 64, col: 34 }
Token { token_type: SEMICOLON, lexeme: Some(";"), literal: None, line: 64, col: 35 }
Token { token_type: IDENTIFIER, lexeme: Some("val"), literal: None, line: 65, col: 3 }
Token { token_type: EQUAL, lexeme: Some("="), literal: None, line: 65, col: 7 }
Token { token_type: IDENTIFIER, lexeme: Some("ntoggle"), literal: None, line: 65, col: 9 }
Token { token_type: DOT, lexeme: Some("."), literal: None, line: 65, col: 16 }
Token { token_type: IDENTIFIER, lexeme: Some("activate"), literal: None, line: 65, col: 17 }
Token { token_type: LeftParen, lexeme: Some("("), literal: None, line: 65, col: 25 }
Token { token_type: RightParen, lexeme: Some(")"), literal: None, line: 65, col: 26 }
Token { token_type: DOT, lexeme: Some("."), literal: None, line: 65, col: 27 }
Token { token_type: IDENTIFIER, lexeme: Some("value"), literal: None, line: 65, col: 28 }
Token { token_type: LeftParen, lexeme: Some("("), literal: None, line: 65, col: 33 }
Token { token_type: RightParen, lexeme: Some(")"), literal: None, line: 65, col: 34 }
Token { token_type: SEMICOLON, lexeme: Some(";"), literal: None, line: 65, col: 35 }
Token { token_type: LeftBrace, lexeme: Some("}"), literal: None, line: 66, col: 1 }
Token { token_type: PRINT, lexeme: Some("print"), literal: None, line: 68, col: 1 }
Token { token_type: IDENTIFIER, lexeme: Some("ntoggle"), literal: None, line: 68, col: 7 }
Token { token_type: DOT, lexeme: Some("."), literal: None, line: 68, col: 14 }
Token { token_type: IDENTIFIER, lexeme: Some("value"), literal: None, line: 68, col: 15 }
Token { token_type: LeftParen, lexeme: Some("("), literal: None, line: 68, col: 20 }
Token { token_type: RightParen, lexeme: Some(")"), literal: None, line: 68, col: 21 }
Token { token_type: SEMICOLON, lexeme: Some(";"), literal: None, line: 68, col: 22 }
Token { token_type: PRINT, lexeme: Some("print"), literal: None, line: 69, col: 1 }
Token { token_type: IDENTIFIER, lexeme: Some("clock"), literal: None, line: 69, col: 7 }
Token { token_type: LeftParen, lexeme: Some("("), literal: None, line: 69, col: 12 }
Token { token_type: RightParen, lexeme: Some(")"), literal: None, line: 69, col: 13 }
Token { token_type: MINUS, lexeme: Some("-"), literal: None, line: 69, col: 15 }
Token { token_type: IDENTIFIER, lexeme: Some("start"), literal: None, line: 69, col: 17 }
Token { token_type: SEMICOLON, lexeme: Some(";"), literal: None, line: 69, col: 22 }
Token { token_type: EOF, lexeme: None, literal: None, line: 69, col: 24 }
